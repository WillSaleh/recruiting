name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: read

jobs:
  python:
    name: Python (lint + tests)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Ensure dev tools present even if theyâ€™re not in requirements.txt
          pip install pytest ruff

      - name: Ruff (lint)
        run: ruff check .

      - name: Pytest
        run: |
          if [ -d tests ]; then pytest -q; else echo "no python tests, skipping"; fi

  node:
    name: Web (TypeScript + Vite build)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: TypeScript typecheck
        run: npx tsc --noEmit

      - name: Build (Vite)
        run: npm run -s build

  rust:
    name: Rust (fmt + clippy + tests)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: queries
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cargo fmt (check)
        run: cargo fmt --all --check

      - name: Cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Cargo test
        run: cargo test --all --locked --quiet

  docker:
    name: Build Docker image(s)
    runs-on: ubuntu-latest
    needs: [python, node, rust]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build root Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          platforms: linux/amd64
          tags: sedaro-nano/app:ci

  trivy:
    name: Security scan (Trivy)
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions/checkout@v4

      - name: Scan filesystem (source)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH'

      - name: Scan built image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'sedaro-nano/app:ci'
          format: 'table'
          severity: 'CRITICAL,HIGH'

